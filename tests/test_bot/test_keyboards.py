import pytest
from unittest.mock import MagicMock
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from bot.keyboards import (
    main_menu_keyboard,
    vacancy_selection_keyboard,
    cancel_keyboard,
)

def test_cancel_keyboard():
    """
    –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ `cancel_keyboard` —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞".
    """
    keyboard = cancel_keyboard()

    assert isinstance(keyboard, InlineKeyboardMarkup)
    assert len(keyboard.inline_keyboard) == 1

    button = keyboard.inline_keyboard[0][0]
    assert isinstance(button, InlineKeyboardButton)
    assert button.text == "–û—Ç–º–µ–Ω–∞"
    assert button.callback_data == "cancel_action"

def test_vacancy_selection_keyboard():
    """
    –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ `vacancy_selection_keyboard` –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–π.
    """
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π
    mock_vacancy_1 = MagicMock()
    mock_vacancy_1.id = 101
    mock_vacancy_1.title = "Python Developer"

    mock_vacancy_2 = MagicMock()
    mock_vacancy_2.id = 102
    mock_vacancy_2.title = "Data Scientist"

    vacancies = [mock_vacancy_1, mock_vacancy_2]

    keyboard = vacancy_selection_keyboard(vacancies)

    assert isinstance(keyboard, InlineKeyboardMarkup)
    # 2 –∫–Ω–æ–ø–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π + "–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é" + "–û—Ç–º–µ–Ω–∞"
    assert len(keyboard.inline_keyboard) == 4

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏
    button1 = keyboard.inline_keyboard[0][0]
    assert button1.text == "Python Developer"
    assert button1.callback_data == "vacancy_select_101"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏
    button2 = keyboard.inline_keyboard[1][0]
    assert button2.text == "Data Scientist"
    assert button2.callback_data == "vacancy_select_102"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
    cancel_button = keyboard.inline_keyboard[3][0]
    assert cancel_button.text == "–û—Ç–º–µ–Ω–∞"
    assert cancel_button.callback_data == "cancel_action"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@pytest.mark.parametrize(
    "vacancy_count, has_resume, has_selected_vacancy, show_survey_button, expected_buttons, description",
    [
        # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –í—Å–µ –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã, –≤–∫–ª—é—á–∞—è –æ–ø—Ä–æ—Å
        (5, True, True, True, [
            "üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ/–≤–∞–∫–∞–Ω—Å–∏–∏", "‚úâÔ∏è –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ", "üìû –ü–ª–∞–Ω —Å–æ–∑–≤–æ–Ω–∞ —Å HR", "üíª –ü–ª–∞–Ω —Ç–µ—Ö. —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è",
            "üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", f"üìÇ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–∫–∞–Ω—Å–∏—é (5)", "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ"
        ], "–í—Å–µ –æ–ø—Ü–∏–∏, –≤–∫–ª—é—á–∞—è –æ–ø—Ä–æ—Å"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –í—Å–µ –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã, –Ω–æ –±–µ–∑ –æ–ø—Ä–æ—Å–∞
        (5, True, True, False, [
            "üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ/–≤–∞–∫–∞–Ω—Å–∏–∏", "‚úâÔ∏è –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ", "üìû –ü–ª–∞–Ω —Å–æ–∑–≤–æ–Ω–∞ —Å HR", "üíª –ü–ª–∞–Ω —Ç–µ—Ö. —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è",
            f"üìÇ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–∫–∞–Ω—Å–∏—é (5)", "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ"
        ], "–í—Å–µ –æ–ø—Ü–∏–∏, –∫—Ä–æ–º–µ –æ–ø—Ä–æ—Å–∞"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏, –µ—Å—Ç—å —Ä–µ–∑—é–º–µ –∏ –¥—Ä—É–≥–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
        (2, True, False, True, [
            "üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", f"üìÇ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–∫–∞–Ω—Å–∏—é (2)", "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ"
        ], "–ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏, —Å –æ–ø—Ä–æ—Å–æ–º"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π, –µ—Å—Ç—å —Ä–µ–∑—é–º–µ
        (0, True, False, False, [
            "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ"
        ], "–ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π, –±–µ–∑ –æ–ø—Ä–æ—Å–∞"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 5: –ï—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è, –Ω–æ –Ω–µ—Ç —Ä–µ–∑—é–º–µ
        (2, False, True, True, [
            "üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ/–≤–∞–∫–∞–Ω—Å–∏–∏", "‚úâÔ∏è –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ", "üìû –ü–ª–∞–Ω —Å–æ–∑–≤–æ–Ω–∞ —Å HR", "üíª –ü–ª–∞–Ω —Ç–µ—Ö. —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è",
            "üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", f"üìÇ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–∫–∞–Ω—Å–∏—é (2)", "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é"
        ], "–ù–µ—Ç —Ä–µ–∑—é–º–µ, —Å –æ–ø—Ä–æ—Å–æ–º"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 6: –°–∞–º—ã–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
        (0, False, False, False, [
            "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é"
        ], "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π, –±–µ–∑ –æ–ø—Ä–æ—Å–∞"),

        # –°—Ü–µ–Ω–∞—Ä–∏–π 7: –¢–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –æ–ø—Ä–æ—Å–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        (0, True, False, True, [
            "üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", "‚ûï –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ"
        ], "–¢–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å –∏ –±–∞–∑–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏"),
    ]
)
def test_main_menu_keyboard(vacancy_count, has_resume, has_selected_vacancy, show_survey_button, expected_buttons, description):
    """
    –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö.
    """
    keyboard = main_menu_keyboard(vacancy_count, has_resume, has_selected_vacancy, show_survey_button)

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –æ–¥–∏–Ω —Å–ø–∏—Å–æ–∫
    actual_buttons_texts = [button.text for row in keyboard.inline_keyboard for button in row]

    assert actual_buttons_texts == expected_buttons, f"–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏: {description}"
    assert len(actual_buttons_texts) == len(expected_buttons), f"–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏: {description}"
